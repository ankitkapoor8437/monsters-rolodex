{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Desktop\\\\REACT\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [{\n        name: 'Frankenstein',\n        id: 'asdc'\n      }, {\n        name: 'Dracula',\n        id: 'gvargv'\n      }, {\n        name: 'Zombie',\n        id: 'dvsdvs'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json());\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"then\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: monster.name\n      }, monster.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ankit/Desktop/REACT/monsters-rolodex/src/App.js"],"names":["logo","React","Component","App","constructor","state","monsters","name","id","componentDidMount","fetch","then","response","json","render","map","monster"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CACA;AACEE,EAAAA,WAAW,GACX;AACE;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAC,CACP;AACEC,QAAAA,IAAI,EAAG,cADT;AAEEC,QAAAA,EAAE,EAAE;AAFN,OADO,EAKP;AACED,QAAAA,IAAI,EAAG,SADT;AAEEC,QAAAA,EAAE,EAAE;AAFN,OALO,EASP;AACED,QAAAA,IAAI,EAAG,QADT;AAEEC,QAAAA,EAAE,EAAC;AAFL,OATO;AADE,KAAb;AAiBD;;AAEDC,EAAAA,iBAAiB,GACjB;AACEC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB;;AAEA;AAAA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AACD;;AAGDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEI,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBC,OAAO,iBAAI;AAAA,kBAAsBA,OAAO,CAACT;AAA9B,SAASS,OAAO,CAACR,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAnC;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxCH;;AA2CA,eAAeL,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n    this.state = {\n      monsters:[\n        {\n          name : 'Frankenstein',\n          id: 'asdc'\n        },\n        {\n          name : 'Dracula',\n          id: 'gvargv'\n        },\n        {\n          name : 'Zombie',\n          id:'dvsdvs'\n        },\n      ] \n    };\n\n  }\n\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json());\n    <div className=\"then\"></div>\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        {\n          this.state.monsters.map(monster => <h1 key={monster.id}>{monster.name}</h1>)\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}